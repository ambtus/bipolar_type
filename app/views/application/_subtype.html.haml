%h2=subtype.name
=render "equilibrium", :subtype => subtype
%p
  Their
  =subtype.realm.identifier
  system wants to remain in equilibrium and neither gain nor lose
  =subtype.potential.period
  If they
  =subtype.consume_verb
  a little more, they will automatically compensate by
  =subtype.produce.ing
  a little more. If they
  =subtype.consume_verb
  a little less, they will automatically compensate by
  =subtype.produce.ing
  a little less.
%h3==#{subtype.realm.name} Mania
%p
  BipolarType defines
  =subtype.realm.identifier
  mania as a state in which one
  =subtype.consume_verb.s
  less, but
  =subtype.produce.s
  more and thus loses
  =subtype.potential.period
  Mania is a state of disequilibrium and can be fatal if one runs out of
  =subtype.potential.period
%p
  Because you
  =subtype.preference.comma
  your more obvious manic symptom is that you
  =subtype.consumer? ? subtype.produce : subtype.consume_verb
  =subtype.consumer? ? "more." : "less."
  You also
  =subtype.consumer? ? subtype.consume_verb : subtype.produce
  =subtype.consumer? ? "less," : "more,"
  however, and if you are running dangerously low on
  =subtype.potential
  you may find it easier to
  =subtype.consumer? ? subtype.consume_verb : subtype.produce
  =subtype.consumer? ? "more" : "less"
  since you have probably already tried to
  =subtype.consumer? ? subtype.produce : subtype.consume_verb
  =subtype.consumer? ? "less." : "more."
-unless subtype.insensitive?
  %p=render "mania", :subtype => subtype
%h3==#{subtype.realm.name} Depression
%p
  BipolarType defines
  =subtype.realm.identifier
  depression as a state in which one
  =subtype.consume_verb.s
  more, but
  =subtype.produce.s
  less and thus gains
  =subtype.potential.period
  Depression is a state of disequilibrium and although rarely fatal, having so
  =subtype.potential.many
  unwanted
  =subtype.potential
  can be embarrassing and may even be
  =subtype.realm.identifier.ly
  unhealthy.
%p
  Because you
  =subtype.preference.comma
  your more obvious depressive symptom is that you
  =subtype.consumer? ? subtype.consume_verb : subtype.produce
  =subtype.consumer? ? "more." : "less."
  You also
  =subtype.consumer? ? subtype.produce : subtype.consume_verb
  =subtype.consumer? ? "less," : "more,"
  however, and if you are drowning under a load of unwanted
  =subtype.potential
  you may find it easier to
  =subtype.consumer? ? subtype.produce : subtype.consume_verb
  =subtype.consumer? ? "more" : "less"
  since you have probably already tried to
  =subtype.consumer? ? subtype.consume_verb : subtype.produce
  =subtype.consumer? ? "less." : "more."
-if subtype.insensitive?
  %p=render "depression", :subtype => subtype
