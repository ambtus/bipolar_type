- content_for(:title, @type.path)

%table
  %caption
    %h2=@type.name
  %tr
    %th{class: cookies['state_colors'].present? ? nil : State.i.css}
      Manic
      .plain (wants sedatives)
    %th{class: cookies['state_colors'].present? ? nil : State.e.css}
      Depressed
      .plain (wants stimulants)
  %tr
    =advice @type.functions.first, Attitude.ip
    =advice @type.functions.third, Attitude.ej
  %tr
    =advice @type.functions.second, Attitude.ij
    =advice @type.functions.fourth, Attitude.ep


%h2{class: cookies['state_colors'].present? ? nil : State.i.css}
  Mania
  -unless cookies['phase_times']
    -State.i.phases.each do |phase|
      .plain{class: cookies['state_colors'].present? ? nil : phase.css}=phase.times.join(', ')
%p
  Don’t force yourself to
  =depressed(@type.functions.second)
  or
  %em not
  =manic(@type.functions.first)
  when you feel
  =State.i.feelings.period
  Doing so is unnatural and difficult, and requires sedatives to achieve with any real success.
%p
  Do allow yourself to
  =manic(@type.functions.third)
  and
  %em not
  =depressed(@type.functions.fourth)
  when you feel
  =State.i.feelings.period
  Doing so is natural and easy (as long as you are not taking sedatives), and only requires
  %em permission.

%h2{class: cookies['state_colors'].present? ? nil : State.e.css}
  Depression
  -unless cookies['phase_times']
    -State.e.phases.reverse.each do |phase|
      .plain{class: cookies['state_colors'].present? ? nil : phase.css}=phase.times.join(', ')
%p
  Don’t force yourself to
  =manic(@type.functions.fourth)
  or
  %em not
  =depressed(@type.functions.third)
  when you feel
  =State.e.feelings.period
  Doing so is unnatural and difficult, and requires stimulants to achieve with any real success.
%p
  Do allow yourself to
  =depressed(@type.functions.first)
  and
  %em not
  =manic(@type.functions.second)
  when you feel
  =State.e.feelings.period
  Doing so is natural and easy (as long as you are not taking stimulants), and only requires
  %em permission.

-if @type.path == Type.my_path
  =form_with method: :get do |form|
    -if cookies['mine']
      =form.submit 'Reset Words'
    -else
      =form.submit 'Load My Words'
