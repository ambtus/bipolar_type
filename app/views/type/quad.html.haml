- content_for(:title, @quad.name)
%table
  %tr
    %td{:colspan => 4} When manic or on stimulants (e.g. caffeine):
  -@quad.subtypes.in_groups_of(2).each do |row|
    %tr
      -row.each do |subtype|
        %td.top
          %h3=subtype.manic.name
          %p.center
            I lose
            =subtype.top? ? "needed" : "unneeded"
            =subtype.potential
  %tr
    %td{:colspan => 4} Whether manic or depressed:
  -@quad.subtypes.in_groups_of(2).each do |row|
    %tr
      -row.each do |subtype|
        %td.top
          %h2=subtype.name
          %p=render "always", :subtype => subtype
  %tr
    %td{:colspan => 4} When depressed or taking sedatives (e.g. alcohol):
  -@quad.subtypes.in_groups_of(2).each do |row|
    %tr
      -row.each do |subtype|
        %td.top
          %h3=subtype.depressed.name
          %p.center
            I gain
            =subtype.top? ? "needed" : "unneeded"
            =subtype.potential
%h2 Bipolar
%p
  If you don’t need
  =@quad.subtypes[0,2].map(&:potential).join(" or ")
  then you can take stimulants all the time and not have too
  =@quad.subtypes.third.potential.many_phrase
  or too
  =@quad.subtypes.fourth.potential.many_phrase.period
  Conversely, if you need
  =@quad.subtypes[0,2].map(&:potential).join(" and ")
  then you can take sedatives all the time and suffer the excess
  =@quad.subtypes[2,2].map(&:potential).join(" and ") + "."
%p
  If, however, you need
  =@quad.subtypes[0,2].map(&:potential).join(" and ")
  but cannot tolerate the excess
  =@quad.subtypes[2,2].map(&:potential).join(" and ")
  then you have a problem.
%p
  You would like to take targeted sedatives that will allow you to
  =@quad.subtypes.first.consume
  more
  =@quad.subtypes.first.energy
  and
  =@quad.subtypes.second.use
  =@quad.subtypes.second.energy.fewer_phrase
  and stimulants that will allow you to
  =@quad.subtypes.third.use
  more
  =@quad.subtypes.third.energy
  and
  =@quad.subtypes.fourth.consume
  =@quad.subtypes.fourth.energy.fewer_phrase
  but psychopharmacology isn’t quite that advanced yet.
%table
  -@quad.subtypes.in_groups_of(2).each do |row|
    %tr
      -row.each do |subtype|
        %td.half.top
          %h2=subtype.name
          %p=render "advice", :subtype => subtype
